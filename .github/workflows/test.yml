name: Test PostgreSQL Only

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  
env:
  POSTGRES_DB: ${{ secrets.DB_NAME }}
  POSTGRES_USER: ${{ secrets.DATASOURCE_USERNAME }}
  POSTGRES_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
  USER_MAIL: ${{ secrets.USER_MAIL }}

jobs:
  check-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DATASOURCE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check DB connection
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          psql -h localhost -U ${{ secrets.DATASOURCE_USERNAME }} -d ${{ secrets.DB_NAME }} -c "SELECT current_database();"
          psql -h localhost -U ${{ secrets.DATASOURCE_USERNAME }} -d ${{ secrets.DB_NAME }} -c "SELECT version();"
        env:
          PGPASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Run only ResetPassword tests and generate coverage report
        run: |
          ./gradlew clean test \
            --tests "io.github.Toku2001.trackandfieldapp.unittest.resetpassword.ResetPasswordControllerTest" \
            --tests "io.github.Toku2001.trackandfieldapp.unittest.resetpassword.ResetPasswordServiceTest" \
            -i --no-scan --no-build-cache
          ./gradlew jacocoTestReport
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DATASOURCE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          RESEND_KEY: ${{ secrets.RESEND_KEY }}
          USER_MAIL: ${{ secrets.USER_MAIL }}
      
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      - name: Upload coverage to Codecov
        if: always() 
        uses: codecov/codecov-action@v4
        with: 
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml