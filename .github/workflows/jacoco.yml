# name: Jacoco Coverage Report

# on:
#   pull_request:
#     branches: [ "develop" ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres
#         ports:
#           - 5432:5432
#         env:
#           POSTGRES_DB: ${{ secrets.DB_NAME}}
#           POSTGRES_USER: ${{ secrets.DATASOURCE_USERNAME }}
#           POSTGRES_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up JDK 21
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: 21

#       - name: Grant execute permission for Gradle
#         run: chmod +x ./gradlew
      
#       - name: Upload test report artifact
#         if: failure()
#         uses: actions/upload-artifact@v4
#         with:
#           name: test-report
#           path: build/reports/tests/test

#       - name: Run tests with coverage
#         run: |
#           ./gradlew clean test \
#             --tests "io.github.Toku2001.trackandfieldapp.controller.RegisterUserControllerTest" \
#             jacocoTestReport \
#             -Dspring.profiles.active=ci \
#             -DDB_URL=jdbc:postgresql://localhost:5432/${{ secrets.DB_NAME }} \
#             -DPOSTGRES_USER=${{ secrets.DATASOURCE_USERNAME }} \
#             -DPOSTGRES_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }} \

#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           files: build/reports/jacoco/test/jacocoTestReport.xml
#           name: jacoco-report
#           fail_ci_if_error: true

name: Test PostgreSQL Only

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  check-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DATASOURCE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check DB connection
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          psql -h localhost -U ${{ secrets.DATASOURCE_USERNAME }} -d ${{ secrets.DB_NAME }} -c "SELECT current_database();"
          psql -h localhost -U ${{ secrets.DATASOURCE_USERNAME }} -d ${{ secrets.DB_NAME }} -c "SELECT version()"
        env:
          PGPASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}